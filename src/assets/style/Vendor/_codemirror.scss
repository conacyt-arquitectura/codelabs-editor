@import '~codemirror/addon/lint/lint.css';

// BASICS
.CodeMirror {
  position: relative;
  overflow: hidden;
  background: white;
  font-family: $font-family-sansSerif;
  font-size: 1rem;
}

// PADDING
.CodeMirror-lines {
  min-height: 1px; /* prevents collapsing before first draw */
  padding: 0;
  cursor: text;
}
.CodeMirror pre {
  position: relative;
  z-index: 2;
  margin: 0;
  padding: 0 .25rem; // Horizontal padding of content
  overflow: visible;
  border-width: 0;
  /* Reset some styles that the rest of the page might have set */
  border-radius: 0;
  background: transparent;
  color: inherit;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  word-wrap: normal;
  white-space: pre;
  -webkit-tap-highlight-color: transparent;
  -webkit-font-variant-ligatures: none;
  font-variant-ligatures: none;
}

.CodeMirror-scrollbar-filler,
.CodeMirror-gutter-filler {
  background-color: transparent; // The little square between H and V scrollbars
}

// GUTTER
.CodeMirror-gutters {
  position: absolute;
  z-index: 3;
  top: 0;
  left: 0;
  min-height: 100%;
  border-right: 1px solid darken($editor-linenumber-bgColor, 2%);
  background: $editor-linenumber-bgColor;
  white-space: nowrap;
}

.CodeMirror-linenumber {
  min-width: 1rem;
  color: $editor-linenumber-color;
  font-family: $font-family-monospace;
  text-align: right;
  white-space: nowrap;
}

.CodeMirror-activeline {
  .CodeMirror-linenumber {
    color: darken($editor-linenumber-color, 16%);
    font-weight: bold;
  }
}

/* CURSOR */

.CodeMirror-cursor {
  position: absolute;
  width: 0;
  border-right: none;
  border-left: 2px solid $color800;
}
/* Shown when moving in bi-directional text */
.CodeMirror .CodeMirror-secondarycursor {
  border-left: 1px solid silver;
}
.cm-fat-cursor .CodeMirror-cursor {
  width: auto;
  border: 0;
  background: #7e7;
}
.cm-fat-cursor .CodeMirror-cursors {
  z-index: 1;
}

.cm-animate-fat-cursor {
  width: auto;
  animation: blink 1.06s steps(1) infinite;
  border: 0;
  background-color: #7e7;
}

/* Can style cursor different in overwrite (non-insert) mode */
// .CodeMirror-overwrite .CodeMirror-cursor {}

.cm-tab {
  display: inline-block;
  text-decoration: inherit;
}

.CodeMirror-ruler {
  position: absolute;
  border-left: 1px solid #ccc;
}

/* DEFAULT THEME */
.CodeMirror-composing {
  border-bottom: 2px solid;
}

/* Default styles for common addons */
/* stylelint-disable-next-line selector-type-no-unknown */
.CodeMirror CodeMirror-matchingbracket {
  color: #0f0;
}
/* stylelint-disable-next-line selector-type-no-unknown */
.CodeMirror CodeMirror-nonmatchingbracket {
  color: #f22;
}
.CodeMirror-matchingtag {
  background: rgba(255, 150, 0, .3);
}

// /* STOP */
// /* The rest of this file contains styles related to the mechanics of
//    the editor. You probably shouldn't touch them. */

.CodeMirror-scroll {
  position: relative;
  height: 100%;
  margin-right: -32px;
  /* 30px is the magic margin used to hide the element's real scrollbars */
  /* See overflow: hidden in .CodeMirror */
  margin-bottom: -32px;
  padding-bottom: 32px;
  overflow: scroll !important; /* Things will break if this is overridden */
  outline: none; /* Prevent dragging from highlighting the element */
}
.CodeMirror-sizer {
  position: relative;
  border-right: 32px solid transparent;
}

/* The fake, visible scrollbars. Used to force redraw during scrolling
before actual scrolling happens, thus preventing shaking and
flickering artifacts. */
.CodeMirror-vscrollbar,
.CodeMirror-hscrollbar,
.CodeMirror-scrollbar-filler,
.CodeMirror-gutter-filler {
  display: none;
  position: absolute;
  z-index: 6;
}
.CodeMirror-vscrollbar {
  top: 0;
  right: 0;
  overflow-x: hidden;
  overflow-y: scroll;
}
.CodeMirror-hscrollbar {
  bottom: 0;
  left: 0;
  overflow-x: scroll;
  overflow-y: hidden;
}
.CodeMirror-scrollbar-filler {
  right: 0;
  bottom: 0;
}
.CodeMirror-gutter-filler {
  bottom: 0;
  left: 0;
}

.CodeMirror-gutter {
  //height: 100%;
  display: inline-block;
  margin-bottom: -30px;
  vertical-align: top;
  white-space: normal;
}
.CodeMirror-gutter-wrapper {
  position: absolute;
  z-index: 4;
  border: none !important;
  background: none !important;
  user-select: none;
}
.CodeMirror-gutter-background {
  position: absolute;
  z-index: 4;
  top: 0;
  bottom: 0;
}
.CodeMirror-gutter-elt {
  position: absolute;
  z-index: 4;
  cursor: default;
}

.CodeMirror-wrap pre {
  word-wrap: break-word;
  word-break: normal;
  white-space: pre-wrap;
}

.CodeMirror-linebackground {
  position: absolute;
  z-index: 0;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.CodeMirror-linewidget {
  position: relative;
  z-index: 2;
  overflow: auto;
}

// .CodeMirror-widget {}

.CodeMirror-code {
  outline: none;
}

.CodeMirror-measure {
  visibility: hidden;
  position: absolute;
  width: 100%;
  height: 0;
  overflow: hidden;
}

.CodeMirror-measure pre {
  position: static;
}

.CodeMirror-cursors {
  visibility: hidden;
  position: relative;
  z-index: 3;
}
.CodeMirror-dragcursors {
  visibility: visible;
}

.CodeMirror-focused .CodeMirror-cursors {
  visibility: visible;
}

.CodeMirror-crosshair {
  cursor: crosshair;
}

.CodeMirror-selected,
.CodeMirror-line::selection,
.CodeMirror-line > span::selection,
.CodeMirror-line > span > span::selection {
  border-radius: 2px;
  background: $selection-bgColor;
}

.cm-searching {
  background: rgba(255, 255, 0, .4);
}

/* Used to force a border model for a node */
.cm-force-border {
  padding-right: .1px;
}

/* See issue #2901 */
.cm-tab-wrap-hack::after {
  content: '';
}

/* Help users use markselection to safely style text background */
/* stylelint-disable-next-line selector-type-no-unknown */
CodeMirror-selectedtext {
  background: none;
}


////////////

.CodeMirror-guttermarker {
  color: #ac4142;
}
.CodeMirror-guttermarker-subtle {
  color: #b0b0b0;//$color500
}
.cm-comment {
  color: $color600;
  font-family: $font-family-monospace;
}
.cm-atom {
  color: #aa759f;
}
.cm-number {
  color: #aa759f;
}
.cm-attribute,
.cm-property {
  color: #90a959;
}
.cm-keyword {
  color: #ac4142;
}
.cm-string {
  color: #f4bf75;
}
.cm-variable {
  color: #90a959;
}
.cm-variable-2 {
  color: #6a9fb5;
}
.cm-def {
  color: #d28445;
}
.cm-bracket {
  color: #202020;
}
.cm-tag {
  color: #ac4142;
}
.cm-link {
  color: #aa759f;
}
.cm-error {
  background: #ac4142;
  color: #505050;
}
.CodeMirror-activeline-background {
  background: $editor-activeline-bgColor;
}

.CodeMirror-matchingbracket {
  color: white !important;
  text-decoration: underline;
}

// same: github-markdown style
.cm-header-1 {
  @extend h1;
}
.cm-header-2 {
  @extend h2;
}
.cm-header-3 {
  @extend h3;
}
.cm-header-4 {
  @extend h4;
}
.cm-header-5 {
  @extend h5;
}
.cm-header-6 {
  @extend h6;
}

.cm-strong {
  font-weight: bold;
}
.cm-em {
  font-style: italic;
}

.cm-hr,
.cm-formatting {
  color: $color500;
  font-family: $font-family-monospace;
  font-weight: bold;
}

.cm-quote {
  color: $color500;
}

// Lint
.CodeMirror-lint-mark-error {
  border-radius: 2px;
  background: #ECACB5;
}
.CodeMirror-lint-tooltip {
  background: $dark-black;
  color: $color50;
  font-family: $font-family-monospace;
  font-size: $font-size-sm;
}
.CodeMirror-lint-message-error {
  background-image: none;
  &::before {
    content: '‚óè';
    display: block;
    position: absolute;
    left: .5rem;
    color: #C7243A;
    font-size: 1rem;
  }
}

// fold
.CodeMirror-foldmarker {
  margin: .25rem;
  color: $color400;
  line-height: .3;
  cursor: pointer;
}
.CodeMirror-foldgutter {
  width: 1rem;
}
.CodeMirror-foldgutter-open,
.CodeMirror-foldgutter-folded {
  cursor: pointer;
  &::after {
    display: block;
    text-align: center;
  }
}
.CodeMirror-foldgutter-open::after {
  content: '\25BE';
}
.CodeMirror-foldgutter-folded::after {
  content: '\25B8';
}
